{"pageProps":{"post":{"title":"Rentaflop Rendering API","date":"2023-03-30T","slug":"api","content":"<h1 id=\"user-content-rentaflop-rendering-api-work-in-progress\">Rentaflop Rendering API (Work in Progress)</h1>\n<p><em>March 30, 2023</em></p>\n<p>We're excited to offer a rendering API (coming soon), with which you can programmatically launch rendering jobs and download rendered outputs for your\nBlender projects. This is especially useful if you have a website or company and need to automate rendering tasks to serve your clients.</p>\n<h2 id=\"user-content-endpoints\">Endpoints</h2>\n<p>You can call the following endpoints to interact with the rendering API. All endpoint URLs are prefixed with \"https://api.rentaflop.com/v1\". For instance,\nthe health check endpoint lives at <a href=\"https://api.rentaflop.com/v1/health\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://api.rentaflop.com/v1/health</a>.</p>\n<h3 id=\"user-content-get-health\"><strong>GET /health</strong></h3>\n<p>Description: Status check to make sure the rentaflop API is up.</p>\n<p>Output:</p>\n<pre><code>{\n    \"status\": 200\n}\n</code></pre>\n<h3 id=\"user-content-post-upload\"><strong>POST /upload</strong></h3>\n<p>Description: Receive an S3 presigned URL where you'll upload a .blend file.</p>\n<p>Input:</p>\n<pre><code>{\n    \"api_key\": \"your_api_key_here\",\n    \"filename\": \"name_of_your_file\"\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>{\n    \"status\": 200,\n    \"filename\": key_for_s3_file,\n    \"url\": s3_upload_url,\n    \"fields\": connection_dictionary_for_s3_url\n}\n</code></pre>\n<h3 id=\"user-content-post-confirm-upload\"><strong>POST /confirm-upload</strong></h3>\n<p>Description: Notify rentaflop the upload is complete and retrieve the upload ID.</p>\n<p>Input:</p>\n<pre><code>{\n    \"api_key\": \"your_api_key_here\",\n    \"filename\": \"key_for_s3_file\"\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>{\n    \"status\": 200,\n    \"upload_id\": upload_id_created_by_rentaflop\n}\n</code></pre>\n<h3 id=\"user-content-post-render\"><strong>POST /render</strong></h3>\n<p>Description: Start a render job.</p>\n<p>Input:</p>\n<pre><code>{\n    \"api_key\": \"your_api_key_here\",\n    \"upload_id\": upload_id_created_by_rentaflop,\n    \"blender_version\": \"desired_version\" (see https://portal.rentaflop.com/rendering for available versions),\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>{\n    \"status\": 200,\n    \"job_id\": job_id_created_by_rentaflop\n}\n</code></pre>\n<h3 id=\"user-content-post-progress\"><strong>POST /progress</strong></h3>\n<p>Description: Check progress on a rendering.</p>\n<p>Input:</p>\n<pre><code>{\n    \"api_key\": \"your_api_key_here\",\n    \"job_id\": job_id_created_by_rentaflop\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>{\n    \"status\": 200,\n    \"frames_completed\": number_of_frames_currently_ready_for_download,\n    \"total_frames\": number_of_total_frames_in_rendering,\n    \"job_status\": \"Finished|Stopped|Failed|In progress\"\n}\n</code></pre>\n<h3 id=\"user-content-post-download\"><strong>POST /download</strong></h3>\n<p>Description: Retrieve an S3 presigned URL where you'll download the rendered frames.</p>\n<p>Input:</p>\n<pre><code>{\n    \"api_key\": \"your_api_key_here\",\n    \"job_id\": job_id_created_by_rentaflop\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>{\n    \"status\": 200,\n    \"url\": s3_download_url\n}\n</code></pre>\n<h2 id=\"user-content-an-example\">An Example</h2>\n<p>This python example uses the rentaflop API to upload a project, render it, then download the results.</p>\n<pre><code>import os\nimport requests\nimport time\n\n\n# read api key from environment variable\n# to protect your API key, we recommend placing it in a .env file rather than putting it directly in your code\nrentaflop_api_key = os.environ.get(\"RENTAFLOP_KEY\")\nrentaflop_api_url = \"https://api.rentaflop.com/v1/\"\n\n# get S3 presigned url for upload\nprint(\"Retrieving upload url...\")\nresponse = requests.post(rentaflop_api_url+\"upload\", json={\"api_key\": rentaflop_api_key, \"filename\": \"my_project.blend\"})\nresponse_json = response.json()\nprint(\"Upload url retrieved.\")\n\n# upload file directly to the rentaflop S3\nprint(\"Uploading file...\")\ns3_filename = response_json[\"filename\"]\ns3_upload_url = response_json[\"url\"]\ns3_fields = response_json[\"fields\"]\nfiles = {\"file\": open(\"my_project.blend\", \"rb\")}\nresponse = requests.post(s3_upload_url, data=s3_fields, files=files)\nprint(\"File uploaded.\")\n\n# let rentaflop know upload is complete and retrieve upload_id\nprint(\"Retrieving upload id...\")\nresponse = requests.post(rentaflop_api_url+\"confirm-upload\", json={\"api_key\": rentaflop_api_key, \"filename\": s3_filename})\nresponse_json = response.json()\nprint(\"Upload id retrieved.\")\n\n# launch render\nprint(\"Launching render job...\")\nupload_id = response_json[\"upload_id\"]\nblender_version = \"3.4.1\"\nresponse = requests.post(rentaflop_api_url+\"render\", json={\"api_key\": rentaflop_api_key, \"upload_id\": upload_id, \"blender_version\": blender_version})\nresponse_json = response.json()\nprint(\"Render job launched.\")\n\n# check progress and wait for job to complete\njob_id = response_json[\"job_id\"]\nprint(\"Waiting for render job to complete...\")\nfinished = False\nwhile not finished:\n    time.sleep(60)\n    response = requests.post(rentaflop_api_url+\"progress\", json={\"api_key\": rentaflop_api_key, \"job_id\": job_id})\n    response_json = response.json()\n\n    frames_completed = response_json[\"frames_completed\"]\n    total_frames = response_json[\"total_frames\"]\n    job_status = response_json[\"job_status\"]\n    print(f\"Completed {frames_completed} out of {total_frames} frames.\")\n    if job_status != \"In progress\":\n        finished = True\n\nprint(\"Render job complete.\")\n\n# retrieve S3 presigned URL for download\nprint(\"Retrieving download url...\")\nresponse = requests.post(rentaflop_api_url+\"download\", json={\"api_key\": rentaflop_api_key, \"job_id\": job_id})\nresponse_json = response.json()\nprint(\"Download url retrieved.\")\n\n# download job output directly from S3\nprint(\"Downloading frames...\")\ns3_download_url = response_json[\"url\"]\nresponse = requests.get(s3_download_url, stream=True)\nwith open('output.zip', 'wb') as f:\n    f.write(response.content)\n\nprint(\"Download complete.\")\n</code></pre>\n<p>We hope you find the rendering API to be useful! As always, if you run into issues or have questions feel free\nto <a href=\"https://portal.rentaflop.com/contact\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">reach out</a>.</p>\n","ogImage":{"url":"/static/rentaflop_logo.png"},"coverImage":"/static/rentaflop_logo.png","excerpt":"Instructions for how to use rentaflop's API to automate your rendering."}},"__N_SSG":true}